{"ast":null,"code":"import { AUTHORIZE } from \"../action-types\";\nconst initialState = {\n  user: {\n    email: localStorage.getItem('email'),\n    isAuth: localStorage.getItem('isAuth')\n  }\n};\n\nfunction rootReducer(state = initialState, action) {\n  console.log(3, action);\n\n  if (action.type === AUTHORIZE) {\n    let email = action.payload.email;\n    let sessid = action.payload.sessid;\n    localStorage.setItem('email', email);\n    localStorage.setItem('sessid', sessid);\n    return Object.assign({}, state, {\n      user: {\n        email,\n        sessid\n      }\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/strong/worck/study/AppReact/reactAppChat/client/src/store/reducers/index.js"],"names":["AUTHORIZE","initialState","user","email","localStorage","getItem","isAuth","rootReducer","state","action","console","log","type","payload","sessid","setItem","Object","assign"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADH;AAEJC,IAAAA,MAAM,EAAEF,YAAY,CAACC,OAAb,CAAqB,QAArB;AAFJ;AADa,CAArB;;AAQA,SAASE,WAAT,CAAqBC,KAAK,GAAGP,YAA7B,EAA2CQ,MAA3C,EAAmD;AAEjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeF,MAAf;;AAEA,MAAIA,MAAM,CAACG,IAAP,KAAgBZ,SAApB,EAA+B;AAC7B,QAAIG,KAAK,GAAGM,MAAM,CAACI,OAAP,CAAeV,KAA3B;AACA,QAAIW,MAAM,GAAGL,MAAM,CAACI,OAAP,CAAeC,MAA5B;AAEAV,IAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BZ,KAA9B;AACAC,IAAAA,YAAY,CAACW,OAAb,CAAqB,QAArB,EAA+BD,MAA/B;AAEA,WAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC9BN,MAAAA,IAAI,EAAE;AACJC,QAAAA,KADI;AAEJW,QAAAA;AAFI;AADwB,KAAzB,CAAP;AAMD;;AACD,SAAON,KAAP;AACD;;AAED,eAAeD,WAAf","sourcesContent":["import { AUTHORIZE } from \"../action-types\";\n\nconst initialState = {\n  user: {\n    email: localStorage.getItem('email'),\n    isAuth: localStorage.getItem('isAuth'),\n  }\n};\n\n\nfunction rootReducer(state = initialState, action) {\n\n  console.log(3, action);\n\n  if (action.type === AUTHORIZE) {\n    let email = action.payload.email\n    let sessid = action.payload.sessid\n\n    localStorage.setItem('email', email);\n    localStorage.setItem('sessid', sessid);\n\n    return Object.assign({}, state, {\n      user: {\n        email,\n        sessid\n      }\n    });\n  }\n  return state;\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}